@model praca_dyplomowa_zesp.Models.Modules.Games.GameBrowserViewModel
@{
    ViewData["Title"] = "Przeglądaj Gry";
}

<h1>@ViewData["Title"]</h1>

<div class="row mb-3">
    <div class="col-md-6">
        <form asp-action="Index" method="get">
            <div class="input-group">
                <input type="text" name="searchString" class="form-control" placeholder="Wyszukaj grę po nazwie..." value="@Model.SearchString" />
                <button type="submit" class="btn btn-primary">Szukaj</button>
                @if (!string.IsNullOrEmpty(Model.SearchString))
                {
                    <a asp-action="Index" class="btn btn-secondary">Wyczyść</a>
                }
            </div>
        </form>
    </div>
</div>

<div class="row">
    @if (Model.Games.Any())
    {
        @foreach (var game in Model.Games)
        {
            <div class="col-lg-2 col-md-3 col-sm-4 col-6 mb-4">
                <div class="card h-100">
                    <a asp-action="Details" asp-route-id="@game.Id">
                        <img src="@(game.Cover?.Url ?? "https://via.placeholder.com/264x352.png?text=Brak+okładki")" class="card-img-top" alt="@game.Name">
                    </a>
                    <div class="card-body p-2">
                        <h6 class="card-title" style="font-size: 0.9rem;">
                            <a asp-action="Details" asp-route-id="@game.Id" class="text-decoration-none text-dark">@game.Name</a>
                        </h6>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p>Nie znaleziono gier pasujących do kryteriów.</p>
    }
</div>

<hr />

<nav aria-label="Paginacja">
    <ul class="pagination justify-content-center">
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" asp-route-searchString="@Model.SearchString">Poprzednia</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Poprzednia</span>
            </li>
        }

        <li class="page-item active">
            <span class="page-link">@Model.CurrentPage</span>
        </li>

        @if (Model.Games.Count == 50) // Proste sprawdzenie - jeśli API zwróciło pełną stronę, zakładamy że jest następna
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" asp-route-searchString="@Model.SearchString">Następna</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Następna</span>
            </li>
        }
    </ul>
</nav>